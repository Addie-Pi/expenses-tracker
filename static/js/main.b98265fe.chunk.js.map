{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","Cards","classes","console","log","children","ExpenseItem","Card","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValue","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoint","expenses","getMonth","Expenses","useState","filterYear","setFilterYear","filterExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","preState","ReactDOM","createRoot","document","getElementById","render"],"mappings":"qbAiBeA,MAff,SAAqBC,GAEjB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAOJ,EAAME,KAAKG,cAClBC,EAAMN,EAAME,KAAKC,eAAe,QAAS,CAAEG,IAAK,YAEtD,OACE,sBAAKC,UAAU,eAAc,UAC3B,qBAAKA,UAAU,sBAAqB,SAAEN,IACtC,qBAAKM,UAAU,qBAAoB,SAAEH,IACrC,qBAAKG,UAAU,oBAAmB,SAAED,MAG5C,E,MCDeE,MAZf,SAAeR,GAEX,IAAMS,EAAU,QAAUT,EAAMO,UAGhC,OAFAG,QAAQC,IAAIX,GAKV,aAFA,CAEA,OAAKO,UAAWE,EAAQ,SAAET,EAAMY,UAEtC,ECmBeC,MA1Bf,SAAqBb,GAYjB,OACE,eAACc,EAAK,CAACP,UAAU,eAAc,UAC7B,cAAC,EAAW,CAACL,KAAMF,EAAME,OAEzB,sBAAKK,UAAU,4BAA2B,UACxC,6BAAKP,EAAMe,QACX,sBAAKR,UAAU,sBAAqB,eAAIP,EAAMgB,eAMxD,E,MCFeC,MAxBf,SAAwBjB,GASpB,OACE,qBAAKO,UAAU,kBAAiB,SAC9B,sBAAKA,UAAU,2BAA0B,UACvC,mDACA,yBAAQW,MAAOlB,EAAMmB,SAAUC,SAZP,SAACC,GAC7BrB,EAAMsB,eAAeD,EAAME,OAAOL,MAEpC,EASqE,UAC7D,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,yBAKhC,E,MCGeM,MAxBf,SAAsB,GAAS,IAARC,EAAK,EAALA,MAGnB,OAAoB,IAAjBA,EAAMC,OAED,oBAAInB,UAAU,0BAAyB,gCAK7C,oBAAIA,UAAU,gBAAe,SAC1BkB,EAAME,KAAI,SAACC,GAAO,OACjB,cAAC,EAAW,CAEV1B,KAAM0B,EAAQ1B,KACda,MAAOa,EAAQb,MACfC,OAAQY,EAAQZ,QAHXY,EAAQC,GAIb,KAIZ,E,mBCCeC,MAvBf,SAAkB9B,GAEd,IAAI+B,EAAgB,KAOpB,OALI/B,EAAMgC,SAAW,IACnBD,EAAgBE,KAAKC,MAAOlC,EAAMkB,MAAQlB,EAAMgC,SAAY,KAAO,KAKnE,sBAAKzB,UAAU,YAAW,UACxB,qBAAKA,UAAU,mBAAkB,SAE/B,qBACEA,UAAU,kBACV4B,MAAO,CAAEC,OAAQL,OAGrB,qBAAKxB,UAAU,mBAAkB,SAAEP,EAAMqC,UAGjD,ECEeC,MArBf,SAAetC,GACX,IAAMuC,EAAiBvC,EAAMwC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUvB,KAAK,IAClEwB,EAAeT,KAAKU,IAAG,MAARV,KAAI,YAAQM,IAGjC,OACE,qBAAKhC,UAAU,QAAO,SACnBP,EAAMwC,WAAWb,KAAI,SAACc,GAAS,OAC5B,cAAC,EAAQ,CAETvB,MAAOuB,EAAUvB,MACjBc,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,MAIf,KAKZ,ECSeO,MA7Bf,SAAuB5C,GAEnB,IAemC,EAf7B6C,EAAiB,CACrB,CAAER,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,GACvB,CAAEmB,MAAO,MAAOnB,MAAO,IACxB,cAEoBlB,EAAM8C,UAAQ,IAAnC,IAAI,EAAJ,qBAAoC,CAAC,IAA3BlB,EAAO,QAEbiB,EADqBjB,EAAQ1B,KAAK6C,YACL7B,OAASU,EAAQZ,MAClD,CAAC,+BAGD,OACI,cAAC,EAAK,CAACwB,WAAYK,GAE3B,ECgBeG,MApCf,SAAkBhD,GAEd,MAAoCiD,mBAAS,QAAO,mBAA7CC,EAAU,KAAEC,EAAa,KAO1BC,EAAiBpD,EAAMyB,MAAM4B,QAAO,SAACzB,GACzC,OAAOA,EAAQ1B,KAAKG,cAAciD,aAAeJ,CACnD,IAIA,OACE,8BACE,eAACpC,EAAK,CAACP,UAAU,WAAU,UACzB,cAAC,EAAc,CACbY,SAAU+B,EACV5B,eAhBoB,SAACiC,GAC3BJ,EAAcI,EAChB,IAgBM,cAAC,EAAa,CAACT,SAAUM,IACzB,cAAC,EAAY,CAAC3B,MAAO2B,QAW/B,E,mBC0CeI,MAlFf,SAAqBxD,GAGjB,MAAwCiD,mBAAS,IAAG,mBAA7CQ,EAAY,KAAEC,EAAe,KACpC,EAA0CT,mBAAS,IAAG,mBAA/CU,EAAa,KAAEC,EAAgB,KACtC,EAAsCX,mBAAS,IAAG,mBAA3CY,EAAW,KAAEC,EAAc,KAkClC,OACE,uBAAMC,SApBc,SAAC1C,GACnBA,EAAM2C,iBAEN,IAAMC,EAAc,CAChBlD,MAAO0C,EACPzC,QAAS2C,EACTzD,KAAM,IAAIgE,KAAKL,IAGnB7D,EAAMmE,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,GAGnB,EAKgC,UAC5B,sBAAKvD,UAAU,wBAAuB,UACpC,sBAAKA,UAAU,uBAAsB,UACnC,0CACA,uBACE6D,KAAK,OACLlD,MAAOuC,EACPrC,SAvCiB,SAACC,GACxBqC,EAAgBrC,EAAME,OAAOL,MACjC,OAwCM,sBAAKX,UAAU,uBAAsB,UACnC,2CACA,uBACE6D,KAAK,SACLC,IAAI,IACJC,KAAK,IACLpD,MAAOyC,EACPvC,SA7CkB,SAACC,GAC1BuC,EAAiBvC,EAAME,OAAOL,MACjC,OA8CM,sBAAKX,UAAU,uBAAsB,UACnC,yCACA,uBACE6D,KAAK,OACLC,IAAI,aACJ1B,IAAI,aACJzB,MAAO2C,EACPzC,SAnDgB,SAACC,GACzByC,EAAezC,EAAME,OAAOL,MAC9B,UAqDI,sBAAKX,UAAU,uBAAsB,UACnC,wBAAQ6D,KAAK,SAASG,QAASvE,EAAMwE,SAAS,oBAG9C,wBAAQJ,KAAK,SAAQ,8BAK/B,ECxCeK,MAtCf,SAAoBzE,GAEhB,MAAkCiD,oBAAS,GAAM,mBAA1CyB,EAAS,KAAEC,EAAY,KAqB9B,OACE,qBAAKpE,UAAU,cAAa,SACzBmE,EACC,cAAC,EAAW,CACVP,kBAvBuB,SAACS,GAE5B,IAAMX,EAAW,2BACZW,GAAkB,IACrB/C,GAAII,KAAK4C,SAASvB,aAGpBtD,EAAM8E,aAAab,GACnBU,GAAa,EACjB,EAeQH,SATmB,WACzBG,GAAa,EACf,IAUM,wBAAQJ,QAhBc,WACxBI,GAAa,EACjB,EAc2C,8BAK/C,ECpCMI,EAAiB,CACrB,CACElD,GAAI,KACJd,MAAO,eACPC,OAAQ,GACRd,KAAM,IAAIgE,KAAK,KAAM,EAAG,KAE1B,CAAErC,GAAI,KAAMd,MAAO,SAAUC,OAAQ,OAAQd,KAAM,IAAIgE,KAAK,KAAM,EAAG,KACrE,CACErC,GAAI,KACJd,MAAO,gBACPC,OAAQ,IACRd,KAAM,IAAIgE,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJd,MAAO,oBACPC,OAAQ,IACRd,KAAM,IAAIgE,KAAK,KAAM,EAAG,MAgCbc,MA3Bf,WAEE,MAAgC/B,mBAAS8B,GAAe,mBAAjDjC,EAAQ,KAAEmC,EAAW,KAe5B,OACE,gCAGE,cAAC,EAAU,CAACH,aAfU,SAACb,GACzBvD,QAAQC,IAAIsD,GACZgB,GAAY,SAACC,GACX,MAAM,CAAEjB,GAAW,mBAAKiB,GAE1B,GAEF,IASI,cAAC,EAAQ,CAACzD,MAAOqB,MAGvB,EC/CaqC,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OAAO,cAAC,EAAG,I","file":"static/js/main.b98265fe.chunk.js","sourcesContent":["import './ExpenseDate.css'\n\nfunction ExpenseDate(props){\n\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\n    const year = props.date.getFullYear()\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\n\n    return (\n      <div className=\"expense-date\">\n        <div className=\"expense-date__month\">{month}</div>\n        <div className=\"expense-date__year\">{year}</div>\n        <div className=\"expense-date__day\">{day}</div>\n      </div>\n    )\n}\n\nexport default ExpenseDate;","import './Cards.css'\n\nfunction Cards(props){\n\n    const classes = 'card ' + props.className;\n    console.log(props)\n\n    return (\n      // props.children: children is reserve name\n      // with props.children, we could wrap our custom component\n      <div className={classes}>{props.children}</div>\n    )\n}\n\nexport default Cards;","import './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Cards from '../UI/Card'\n// import { useState } from 'react';\n\nfunction ExpenseItem(props){\n    // props is immutable\n\n    // React hook: useState\n    // const [title, setTitle] = useState(props.title)\n\n    // const clickHandker = () =>{\n    //   // by calling setTitle(), the component function will executed again\n    //   setTitle('Title has been changed')\n    // }\n\n\n    return (\n      <Cards className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">$ {props.amount}</div>\n        </div>\n        {/* dont call the function when you pass \"clickHandler()\", cause it will be invoke when the function been return and it will be too early  */}\n        {/* <button onClick={clickHandker}>Change Title</button> */}\n      </Cards>\n    )\n}\n\nexport default ExpenseItem;","import { useState } from 'react'\nimport './ExpensesFilter.css'\n\nfunction ExpensesFilter(props){\n    const dropdownChangeHandler = (event) => { \n      props.onChangeFilter(event.target.value)\n\n    }\n\n\n\n\n    return (\n      <div className=\"expenses-filter\">\n        <div className=\"expenses-filter__control\">\n          <label>Filter by year</label>\n          <select value={props.selected} onChange={dropdownChangeHandler}>\n            <option value=\"2022\">2022</option>\n            <option value=\"2021\">2021</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n          </select>\n        </div>\n      </div>\n    )\n}\n\nexport default ExpensesFilter;","\nimport './ExpensesList.css'\nimport ExpenseItem from './ExpenseItem'\n\nfunction ExpensesList({items}){\n\n\n    if(items.length === 0) {\n        return (\n            <h2 className='expenses-list__fallback'>No expenses found.</h2>\n        )\n      \n    }\n    return (\n      <ul className=\"expenses-list\">\n        {items.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            date={expense.date}\n            title={expense.title}\n            amount={expense.amount}\n          />\n        ))}\n      </ul>\n    )\n}\n\n\nexport default ExpensesList;","\nimport './ChartBar.css'\n\nfunction ChartBar(props){\n\n    let barFillHeight = '0%'\n\n    if (props.maxValue > 0) {\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n    }\n\n\n    return (\n      <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n          {/* style wants a js obj as a value */}\n          <div\n            className=\"chart-bar__fill\"\n            style={{ height: barFillHeight }}\n          ></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n      </div>\n    )\n}\n\nexport default ChartBar","\nimport './Chart.css'\nimport ChartBar from './ChartBar'\n\n\nfunction Chart(props){\n    const dataPointValue = props.dataPoints.map(dataPoint => dataPoint.value)\n    const totalMaximum = Math.max(...dataPointValue)\n\n\n    return (\n      <div className=\"chart\">\n        {props.dataPoints.map((dataPoint)=>(\n            <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={totalMaximum}\n            label={dataPoint.label}\n          />\n        ))}\n        \n      </div>\n    )\n}\n\n\nexport default Chart","\nimport Chart from '../Chart/Chart'\n\nfunction ExpensesChart(props){\n\n    const chartDataPoint = [\n      { label: 'Jan', value: 0 },\n      { label: 'Feb', value: 0 },\n      { label: 'Mar', value: 0 },\n      { label: 'Apr', value: 0 },\n      { label: 'May', value: 0 },\n      { label: 'Jun', value: 0 },\n      { label: 'Jul', value: 0 },\n      { label: 'Aug', value: 0 },\n      { label: 'Sep', value: 0 },\n      { label: 'Oct', value: 0 },\n      { label: 'Nov', value: 0 },\n      { label: 'Dec', value: 0 },\n    ]\n\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth(); \n        chartDataPoint[expenseMonth].value += expense.amount\n    }\n\n\n    return(\n        <Chart dataPoints={chartDataPoint}/>\n    )\n}\n\n\nexport default ExpensesChart","import './Expenses.css'\nimport ExpenseItem from \"./ExpenseItem\";\nimport Cards from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter'\nimport { useState } from 'react';\nimport ExpensesList from './ExpensesList'\nimport ExpensesChart from './ExpensesChart';\n\n\nfunction Expenses(props){\n\n    const [filterYear, setFilterYear] = useState('2020');\n\n    const filterchangeHandler = (selectedYear) => {\n      setFilterYear(selectedYear);\n    }\n\n\n    const filterExpenses = props.items.filter((expense) => {\n      return expense.date.getFullYear().toString() === filterYear;\n    })\n\n    \n\n    return (\n      <div>\n        <Cards className=\"expenses\">\n          <ExpensesFilter\n            selected={filterYear}\n            onChangeFilter={filterchangeHandler}\n          />\n          <ExpensesChart expenses={filterExpenses} />\n          <ExpensesList items={filterExpenses} />\n\n          {/*\n          <ExpenseItem\n            date={props.items[1].date}\n            title={props.items[1].title}\n            amount={props.items[1].amount}\n          /> */}\n        </Cards>\n      </div>\n    )\n}\n\nexport default Expenses;","import { useState } from 'react'\nimport './ExpenseForm.css'\n\nfunction ExpenseForm(props){\n\n    // something to keep in mind that the react update state did not work instantly\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('')\n\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n       setEnteredAmount(event.target.value)\n    } \n\n    const dateChangeHandler = (event) => {\n      setEnteredDate(event.target.value)\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount, \n            date: new Date(enteredDate)\n        }\n\n        props.onSaveExpenseData(expenseData)\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n\n\n    }\n\n\n\n    return (\n      <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              value={enteredTitle}\n              onChange={titleChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              step=\"1\"\n              value={enteredAmount}\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              min=\"2019-01-01\"\n              max=\"2022-12-31\"\n              value={enteredDate}\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancel}>\n            Cancel\n          </button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n    )\n\n}\n\nexport default ExpenseForm;","\nimport './NewExpense.css'\nimport ExpenseForm from './ExpenseForm';\nimport { useState } from 'react';\n\nfunction NewExpense(props){\n\n    const [isEditing, setIsEditing] = useState(false)\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n\n        const expenseData = {\n          ...enteredExpenseData,\n          id: Math.random().toString()\n        }\n\n        props.onAddExpense(expenseData)\n        setIsEditing(false)\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true)\n    }\n\n    const stopEditingHandler = () => {\n      setIsEditing(false)\n    }\n\n    return (\n      <div className=\"new-expense\">\n        {isEditing ? (\n          <ExpenseForm\n            onSaveExpenseData={saveExpenseDataHandler}\n            onCancel={stopEditingHandler}\n          />\n        ) : (\n          <button onClick={startEditingHandler}>Add New Expense</button>\n        )}\n      </div>\n    )\n\n}\n\nexport default NewExpense;","\nimport { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\"\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]\n\n// JSX, Javascript XML\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  \n\n  const addExpenseHandler = (expenseData) => {\n    console.log(expenseData)\n    setExpenses((preState)=>{\n      return [expenseData, ...preState];\n\n    })\n\n  }\n\n  \n\n  return (\n    <div>\n      {/* <p>I wanna QUIT!!!!!!!!!!!!!</p> */}\n\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\n// main entry in React\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n// where the React app shall be placed\nroot.render(<App />);\n"],"sourceRoot":""}